//
//  WeatherAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import "IpJsonResponse.h"

@implementation IpJsonResponse

/**
* IP address
*/
@synthesize ip;

/**
* ipv4 or ipv6
*/
@synthesize type;

/**
* Continent code
*/
@synthesize continentCode;

/**
* Continent name
*/
@synthesize continentName;

/**
* Country code
*/
@synthesize countryCode;

/**
* Name of country
*/
@synthesize countryName;

/**
* true or false
*/
@synthesize isEu;

/**
* Geoname ID
*/
@synthesize geonameId;

/**
* City name
*/
@synthesize city;

/**
* Region name
*/
@synthesize region;

/**
* Latitude in decimal degree
*/
@synthesize lat;

/**
* Longitude in decimal degree
*/
@synthesize lon;

/**
* Time zone
*/
@synthesize tzId;

/**
* Local time as epoch
*/
@synthesize localtimeEpoch;

/**
* Date and time
*/
@synthesize localtime;



/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"ip": @"ip",
        @"type": @"type",
        @"continent_code": @"continentCode",
        @"continent_name": @"continentName",
        @"country_code": @"countryCode",
        @"country_name": @"countryName",
        @"is_eu": @"isEu",
        @"geoname_id": @"geonameId",
        @"city": @"city",
        @"region": @"region",
        @"lat": @"lat",
        @"lon": @"lon",
        @"tz_id": @"tzId",
        @"localtime_epoch": @"localtimeEpoch",
        @"localtime": @"localtime"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end