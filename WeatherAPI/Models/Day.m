//
//  WeatherAPI
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
//
#import "Day.h"

@implementation Day

/**
* Maximum temperature in celsius for the day.
*/
@synthesize maxtempC;

/**
* Maximum temperature in fahrenheit for the day
*/
@synthesize maxtempF;

/**
* Minimum temperature in celsius for the day
*/
@synthesize mintempC;

/**
* Minimum temperature in fahrenheit for the day
*/
@synthesize mintempF;

/**
* Average temperature in celsius for the day
*/
@synthesize avgtempC;

/**
* Average temperature in fahrenheit for the day
*/
@synthesize avgtempF;

/**
* Maximum wind speed in miles per hour
*/
@synthesize maxwindMph;

/**
* Maximum wind speed in kilometer per hour
*/
@synthesize maxwindKph;

/**
* Total precipitation in milimeter
*/
@synthesize totalprecipMm;

/**
* Total precipitation in inches
*/
@synthesize totalprecipIn;

/**
* Average visibility in kilometer
*/
@synthesize avgvisKm;

/**
* Average visibility in miles
*/
@synthesize avgvisMiles;

/**
* Average humidity as percentage
*/
@synthesize avghumidity;

/**
* TODO: Write general description for this method
*/
@synthesize condition;

/**
* UV Index
*/
@synthesize uv;



/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"maxtemp_c": @"maxtempC",
        @"maxtemp_f": @"maxtempF",
        @"mintemp_c": @"mintempC",
        @"mintemp_f": @"mintempF",
        @"avgtemp_c": @"avgtempC",
        @"avgtemp_f": @"avgtempF",
        @"maxwind_mph": @"maxwindMph",
        @"maxwind_kph": @"maxwindKph",
        @"totalprecip_mm": @"totalprecipMm",
        @"totalprecip_in": @"totalprecipIn",
        @"avgvis_km": @"avgvisKm",
        @"avgvis_miles": @"avgvisMiles",
        @"avghumidity": @"avghumidity",
        @"condition": @"condition",
        @"uv": @"uv"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end